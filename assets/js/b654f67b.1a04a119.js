"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8553],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>p});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var f=a.createContext({}),c=function(e){var t=a.useContext(f),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},s=function(e){var t=c(e.components);return a.createElement(f.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,f=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),m=c(r),p=n,k=m["".concat(f,".").concat(p)]||m[p]||u[p]||o;return r?a.createElement(k,l(l({ref:t},s),{},{components:r})):a.createElement(k,l({ref:t},s))}));function p(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,l=new Array(o);l[0]=m;var i={};for(var f in t)hasOwnProperty.call(t,f)&&(i[f]=t[f]);i.originalType=e,i.mdxType="string"==typeof e?e:n,l[1]=i;for(var c=2;c<o;c++)l[c]=r[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},52088:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>f,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var a=r(87462),n=(r(67294),r(3905));const o={},l="KafkaFlow.Serializer.SchemaRegistry.ConfluentProtobuf assembly",i={unversionedId:"reference/KafkaFlow.Serializer.SchemaRegistry.ConfluentProtobuf/KafkaFlow.Serializer.SchemaRegistry.ConfluentProtobuf",id:"reference/KafkaFlow.Serializer.SchemaRegistry.ConfluentProtobuf/KafkaFlow.Serializer.SchemaRegistry.ConfluentProtobuf",title:"KafkaFlow.Serializer.SchemaRegistry.ConfluentProtobuf assembly",description:"KafkaFlow namespace",source:"@site/docs/reference/KafkaFlow.Serializer.SchemaRegistry.ConfluentProtobuf/KafkaFlow.Serializer.SchemaRegistry.ConfluentProtobuf.md",sourceDirName:"reference/KafkaFlow.Serializer.SchemaRegistry.ConfluentProtobuf",slug:"/reference/KafkaFlow.Serializer.SchemaRegistry.ConfluentProtobuf/",permalink:"/kafkaflow/docs/reference/KafkaFlow.Serializer.SchemaRegistry.ConfluentProtobuf/",draft:!1,editUrl:"https://github.com/farfetch/kafkaflow/tree/master/website/docs/reference/KafkaFlow.Serializer.SchemaRegistry.ConfluentProtobuf/KafkaFlow.Serializer.SchemaRegistry.ConfluentProtobuf.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ConfluentProtobufSerializer.SerializeAsync method",permalink:"/kafkaflow/docs/reference/KafkaFlow.Serializer.SchemaRegistry.ConfluentProtobuf/KafkaFlow.Serializer.SchemaRegistry/ConfluentProtobufSerializer/SerializeAsync"},next:{title:"KafkaFlow.Unity",permalink:"/kafkaflow/docs/category/kafkaflowunity"}},f={},c=[{value:"KafkaFlow namespace",id:"kafkaflow-namespace",level:2},{value:"KafkaFlow.Serializer.SchemaRegistry namespace",id:"kafkaflowserializerschemaregistry-namespace",level:2}],s={toc:c};function u(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"kafkaflowserializerschemaregistryconfluentprotobuf-assembly"},"KafkaFlow.Serializer.SchemaRegistry.ConfluentProtobuf assembly"),(0,n.kt)("h2",{id:"kafkaflow-namespace"},"KafkaFlow namespace"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"public type"),(0,n.kt)("th",{parentName:"tr",align:null},"description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"static\xa0class\xa0",(0,n.kt)("a",{parentName:"td",href:"/kafkaflow/docs/reference/KafkaFlow.Serializer.SchemaRegistry.ConfluentProtobuf/KafkaFlow/ConsumerConfigurationBuilderExtensions/"},"ConsumerConfigurationBuilderExtensions")),(0,n.kt)("td",{parentName:"tr",align:null},"No needed")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"static\xa0class\xa0",(0,n.kt)("a",{parentName:"td",href:"/kafkaflow/docs/reference/KafkaFlow.Serializer.SchemaRegistry.ConfluentProtobuf/KafkaFlow/ProducerConfigurationBuilderExtensions/"},"ProducerConfigurationBuilderExtensions")),(0,n.kt)("td",{parentName:"tr",align:null},"No needed")))),(0,n.kt)("h2",{id:"kafkaflowserializerschemaregistry-namespace"},"KafkaFlow.Serializer.SchemaRegistry namespace"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"public type"),(0,n.kt)("th",{parentName:"tr",align:null},"description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"class\xa0",(0,n.kt)("a",{parentName:"td",href:"/kafkaflow/docs/reference/KafkaFlow.Serializer.SchemaRegistry.ConfluentProtobuf/KafkaFlow.Serializer.SchemaRegistry/ConfluentProtobufDeserializer/"},"ConfluentProtobufDeserializer")),(0,n.kt)("td",{parentName:"tr",align:null},"A protobuf message serializer integrated with the confluent schema registry")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"class\xa0",(0,n.kt)("a",{parentName:"td",href:"/kafkaflow/docs/reference/KafkaFlow.Serializer.SchemaRegistry.ConfluentProtobuf/KafkaFlow.Serializer.SchemaRegistry/ConfluentProtobufSerializer/"},"ConfluentProtobufSerializer")),(0,n.kt)("td",{parentName:"tr",align:null},"A protobuf message serializer integrated with the confluent schema registry")))))}u.isMDXComponent=!0}}]);