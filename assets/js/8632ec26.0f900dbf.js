"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5987],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(n),d=a,f=u["".concat(p,".").concat(d)]||u[d]||m[d]||o;return n?r.createElement(f,i(i({ref:t},c),{},{components:n})):r.createElement(f,i({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},84765:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=n(87462),a=(n(67294),n(3905));const o={sidebar_position:10,sidebar_label:"OpenTelemetry"},i="OpenTelemetry instrumentation",l={unversionedId:"guides/open-telemetry",id:"guides/open-telemetry",title:"OpenTelemetry instrumentation",description:"In this section, we will explore how to enable OpenTelemetry instrumentation when using KafkaFlow.",source:"@site/docs/guides/open-telemetry.md",sourceDirName:"guides",slug:"/guides/open-telemetry",permalink:"/kafkaflow/docs/guides/open-telemetry",draft:!1,editUrl:"https://github.com/farfetch/kafkaflow/tree/master/website/docs/guides/open-telemetry.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10,sidebar_label:"OpenTelemetry"},sidebar:"tutorialSidebar",previous:{title:"Global Events",permalink:"/kafkaflow/docs/guides/global-events"},next:{title:"Dependency Injection",permalink:"/kafkaflow/docs/guides/dependency-injection"}},p={},s=[{value:"Including OpenTelemetry instrumentation in your code",id:"including-opentelemetry-instrumentation-in-your-code",level:2},{value:"Using .NET Automatic Instrumentation",id:"using-net-automatic-instrumentation",level:2},{value:"Propagation",id:"propagation",level:2}],c={toc:s},u="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"opentelemetry-instrumentation"},"OpenTelemetry instrumentation"),(0,a.kt)("p",null,"In this section, we will explore how to enable OpenTelemetry instrumentation when using KafkaFlow."),(0,a.kt)("p",null,"KafkaFlow includes support for ",(0,a.kt)("a",{parentName:"p",href:"https://opentelemetry.io/docs/concepts/signals/traces/"},"Traces")," and ",(0,a.kt)("a",{parentName:"p",href:"https://opentelemetry.io/docs/concepts/signals/baggage/"},"Baggage")," signals using ",(0,a.kt)("a",{parentName:"p",href:"https://opentelemetry.io/docs/instrumentation/net/"},"OpenTelemetry instrumentation"),"."),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"You can find a sample on how to enable OpenTelemetry ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Farfetch/kafkaflow/tree/master/samples/KafkaFlow.Sample.OpenTelemetry"},"here"),".")),(0,a.kt)("h2",{id:"including-opentelemetry-instrumentation-in-your-code"},"Including OpenTelemetry instrumentation in your code"),(0,a.kt)("p",null,"Add the package ",(0,a.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/KafkaFlow.OpenTelemetry/"},"KafkaFlow.OpenTelemetry")," to the project and add the extension method ",(0,a.kt)("inlineCode",{parentName:"p"},"AddOpenTelemetryInstrumentation")," in your ",(0,a.kt)("a",{parentName:"p",href:"/kafkaflow/docs/guides/configuration"},"configuration"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"services.AddKafka(\n    kafka => kafka\n        .AddCluster(...)\n        .AddOpenTelemetryInstrumentation()\n);\n")),(0,a.kt)("p",null,"Once you have your .NET application instrumentation configured (",(0,a.kt)("a",{parentName:"p",href:"https://opentelemetry.io/docs/instrumentation/net/getting-started/"},"see here"),"), you just need to subscribe to the source ",(0,a.kt)("inlineCode",{parentName:"p"},"KafkaFlow.OpenTelemetry")," that is accessible through a constant at ",(0,a.kt)("inlineCode",{parentName:"p"},"KafkaFlowInstrumentation.ActivitySourceName"),"."),(0,a.kt)("h2",{id:"using-net-automatic-instrumentation"},"Using .NET Automatic Instrumentation"),(0,a.kt)("p",null,"When using ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/open-telemetry/opentelemetry-dotnet-instrumentation"},".NET automatic instrumentation"),", the KafkaFlow activity can be captured by including the ActivitySource name ",(0,a.kt)("inlineCode",{parentName:"p"},"KafkaFlow.OpenTelemetry")," as a parameter to the variable ",(0,a.kt)("inlineCode",{parentName:"p"},"OTEL_DOTNET_AUTO_TRACES_ADDITIONAL_SOURCES"),"."),(0,a.kt)("h2",{id:"propagation"},"Propagation"),(0,a.kt)("p",null,"KafkaFlow uses ",(0,a.kt)("a",{parentName:"p",href:"https://opentelemetry.io/docs/specs/otel/context/api-propagators/"},"Propagation"),", the mechanism that moves context information data between services and processes.\nWhen a message is produced using a KafkaFlow producer and consumed by a KafkaFlow consumer, the context will automatically be propagated."))}m.isMDXComponent=!0}}]);