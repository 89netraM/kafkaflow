"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[859],{3905:(e,a,n)=>{n.d(a,{Zo:()=>d,kt:()=>f});var t=n(7294);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function o(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?o(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function s(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=t.createContext({}),c=function(e){var a=t.useContext(l),n=a;return e&&(n="function"==typeof e?e(a):i(i({},a),e)),n},d=function(e){var a=c(e.components);return t.createElement(l.Provider,{value:a},e.children)},p={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},u=t.forwardRef((function(e,a){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=c(n),f=r,m=u["".concat(l,".").concat(f)]||u[f]||p[f]||o;return n?t.createElement(m,i(i({ref:a},d),{},{components:n})):t.createElement(m,i({ref:a},d))}));function f(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var s={};for(var l in a)hasOwnProperty.call(a,l)&&(s[l]=a[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}u.displayName="MDXCreateElement"},7071:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var t=n(7462),r=(n(7294),n(3905));const o={sidebar_position:5},i="Dashboard",s={unversionedId:"guides/dashboard",id:"guides/dashboard",title:"Dashboard",description:"KafkaFlow provides a Dashboard where you can visualize information related to your consumers and make use of all operations available on KafkaFlow.Admin.WebApi.",source:"@site/docs/guides/dashboard.md",sourceDirName:"guides",slug:"/guides/dashboard",permalink:"/kafkaflow/docs/guides/dashboard",draft:!1,editUrl:"https://github.com/farfetch/kafkaflow/tree/master/website/docs/guides/dashboard.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Add Consumers",permalink:"/kafkaflow/docs/guides/consumers/add-consumers"},next:{title:"Admin",permalink:"/kafkaflow/docs/guides/admin"}},l={},c=[{value:"Configuring",id:"configuring",level:2},{value:"Accessing",id:"accessing",level:2}],d={toc:c};function p(e){let{components:a,...n}=e;return(0,r.kt)("wrapper",(0,t.Z)({},d,n,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"dashboard"},"Dashboard"),(0,r.kt)("p",null,"KafkaFlow provides a Dashboard where you can visualize information related to your consumers and make use of all operations available on ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Farfetch/kafka-flow/wiki/admin"},"KafkaFlow.Admin.WebApi"),". "),(0,r.kt)("p",null,"It is important to note that the Dashboard runs, shows information, and manages the consumers on all application instances, which means if you have 10 machines running your application, the dashboard will be running in every instance and any operation will affect the consumer in all the machines."),(0,r.kt)("h2",{id:"configuring"},"Configuring"),(0,r.kt)("p",null,"Install the following packages:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.nuget.org/packages/KafkaFlow.Admin/"},"KafkaFlow.Admin")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.nuget.org/packages/KafkaFlow.Admin.WebApi/"},"KafkaFlow.Admin.WebApi")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.nuget.org/packages/KafkaFlow.Admin.Dashboard/"},"KafkaFlow.Admin.Dashboard"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},' public void ConfigureServices(IServiceCollection services)\n {\n    services.AddKafka(kafka => kafka\n        .AddCluster(cluster => cluster\n            .WithBrokers(new[] { "localhost:9092" })\n            .EnableAdminMessages("kafka-flow.admin")\n            .EnableTelemetry("kafka-flow.admin") // you can use the same topic used in EnableAdminMessages, if need it\n        ));\n }\n\npublic void Configure(IApplicationBuilder app, IWebHostEnvironment env, IHostApplicationLifetime lifetime)\n{\n    app\n        .UseRouting()\n        .UseEndpoints(endpoints => { endpoints.MapControllers(); })\n        .UseKafkaFlowDashboard();\n    ...\n}\n')),(0,r.kt)("h2",{id:"accessing"},"Accessing"),(0,r.kt)("p",null,"The dashboard UI is available at ",(0,r.kt)("inlineCode",{parentName:"p"},"/kafka-flow")," and is refreshed every 5 seconds with telemetry data available at the endpoint ",(0,r.kt)("inlineCode",{parentName:"p"},"/kafka-flow/telemetry"),". "),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/233064/124478023-1d773680-dd7b-11eb-89e4-41a1f4f36a6f.png",alt:"image"})))}p.isMDXComponent=!0}}]);